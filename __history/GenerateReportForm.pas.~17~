unit GenerateReportForm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, Buttons, Grids, DBGrids, ComCtrls, DataModuleForm,
  frxClass, DB, frxRich, frxDCtrl, frxFIBComponents, frxDBSet, BTS_Office_form,
  cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters, dxSkinsCore,
  dxSkinsDefaultPainters, cxStyles, cxCustomData, cxFilter, cxData,
  cxDataStorage, cxEdit, cxDBData, cxGridLevel, cxGridCustomTableView,
  cxGridTableView, cxGridDBTableView, cxClasses, cxGridCustomView, cxGrid,
  frxExportBIFF, frxExportPDF, frxExportMail, frxExportXLS;

type
  TGenerateReport = class(TForm)
    DBGrid1: TDBGrid;
    Panel1: TPanel;
    Panel_Name: TPanel;
    GroupBox1: TGroupBox;
    Panel2: TPanel;
    ButtonReport: TBitBtn;
    Panel3: TPanel;
    Panel4: TPanel;
    eDateBegin: TDateTimePicker;
    eDateEnd: TDateTimePicker;
    Label1: TLabel;
    frxReport1: TfrxReport;
    frxFIBComponents1: TfrxFIBComponents;
    frxDBDataset1: TfrxDBDataset;
    GroupBox2: TGroupBox;
    eFilter: TEdit;
    cxGrid2: TcxGrid;
    cxGrid2DBTableView1: TcxGridDBTableView;
    cxGrid2Level1: TcxGridLevel;
    cxGrid2DBTableView1TM_ID: TcxGridDBColumn;
    cxGrid2DBTableView1TM_NAME: TcxGridDBColumn;
    cxGrid2DBTableView1TM_UNITM: TcxGridDBColumn;
    frxPDFExport1: TfrxPDFExport;
    cxGrid2DBTableView1TM_GOST: TcxGridDBColumn;
    frxXLSExport1: TfrxXLSExport;
    procedure DBGrid1CellClick(Column: TColumn);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ButtonReportClick(Sender: TObject);
    procedure eFilterChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  GenerateReport: TGenerateReport;

implementation

{$R *.dfm}

procedure TGenerateReport.ButtonReportClick(Sender: TObject);
var
  Stream: TMemoryStream;
  User: string;
begin
 DataModule.ds_Template.ParamByName('X').AsInteger:=DataModule.ds_Template.FieldByName('T_ID').AsInteger;
 DataModule.ds_Template.Open;
 Stream:=TMemoryStream.Create;
  try
    (DataModule.ds_Template.FieldByName('T_BLOB') as TBLOBField).SaveToStream(Stream);
    //Stream.Seek(0, soFromBeginning);
    if Stream.Size <> 0 then
     Begin
       Stream.Position := 0;
       frxReport1.Clear;
       frxReport1.LoadFromStream(Stream);
       //ShowMessage('Stream.Size <> 0'+#13#10+'          Нажмите Ок');
     End;
          // передача переменных в FastReport .
     frxReport1.Variables['DateBeg']:=Format('''%s''',[DateToStr(eDateBegin.Date)]);
     frxReport1.Variables['DateEnd']:=Format('''%s''',[DateToStr(eDateEnd.Date)]);
     frxReport1.Variables['UserRight']:=QuotedStr(UserName);
     frxReport1.Variables['MetalName']:='''' + DataModule.ds_Metal.FieldByName('TM_NAME').AsString + '''';
     frxReport1.Variables['MetalID']:=DataModule.ds_Metal.FieldByName('TM_ID').AsInteger;
     frxReport1.ShowReport;
  finally
  Stream.Free;

  end;
end;

procedure TGenerateReport.DBGrid1CellClick(Column: TColumn);
begin
 Label1.Caption:=DataModule.ds_Template.FieldByName('T_NAME').AsString;//'ТЕСТ';
 if DataModule.ds_Template.FieldByName('T_ID').AsInteger = 3 then
  begin
    eFilter.Visible:=True;
    cxGrid2.Visible:=True;
  end
  else
  Begin
    eFilter.Visible:=False;
    cxGrid2.Visible:=False;
  End;

end;

procedure TGenerateReport.eFilterChange(Sender: TObject);
var
  filterText:string;
begin
   if (Length(Trim(eFilter.Text)) > 0) and (eFilter.Text <> filterText) then
     begin
       DataModule.ds_Metal.Filtered := False;
       DataModule.ds_Metal.FilterOptions :=[foCaseInsensitive];
       DataModule.ds_Metal.Filter := 'TM_NAME LIKE ' + QuotedStr('%' + Trim(eFilter.Text) + '%');// +
                           //' OR U_NOMERZAK LIKE ' + QuotedStr('%' + Trim(eFilter.Text) + '%'); //+
                          // ' OR U_INV LIKE ' + QuotedStr('%' + Trim(eFilter.Text) + '%') ;
       DataModule.ds_Metal.Filtered := True;
     end;
   if Length(Trim(eFilter.Text)) = 0 then
      begin
        eFilter.Clear;
        DataModule.ds_Metal.Filtered := False;
        DataModule.ds_Metal.ReopenLocate('TM_ID');
      end;

end;

procedure TGenerateReport.FormClose(Sender: TObject; var Action: TCloseAction);
begin
 Action := caFree;
end;

procedure TGenerateReport.FormShow(Sender: TObject);
begin
 DataMOdule.ds_TemplateT_ID.Visible:=False;
 Label1.Caption:= DataModule.ds_Template.FieldByName('T_NAME').AsString;
 eDateBegin.Date:=Date;
 eDateEnd.Date:=Date;
end;

end.
